{
  "compilerOptions": {
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "module": "commonjs",

    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,

    //* Basic Options */
    "incremental": true, //* Enable incremental compilation */

    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "target": "ESNEXT",

    // "lib": [],                             /* Specify library files to be included in the compilation. */
    "allowJs": true,

    "outDir": "dist",

    "sourceMap": true,


    /* Strict Type-Checking Options */
    "strict": false,

    /* Enable all strict type-checking options. */
    "noImplicitAny": false,

    /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false,

    /* Enable strict null checks. */
    "strictFunctionTypes": false,

    /* Enable strict checking of function types. */
    "strictBindCallApply": false,

    /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "strictPropertyInitialization": false,

    /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": false,

    /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": false,

    /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */

    "noUnusedLocals": true,
    /* Report errors on unused locals. */

    "noUnusedParameters": true,
    /* Report errors on unused parameters. */

    "noImplicitReturns": true,
    /* Report error when not all code paths in function return a value. */

    "noFallthroughCasesInSwitch": true,
    /* Report errors for fallthrough cases in switch statement. */

    "allowSyntheticDefaultImports": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    //"inlineSourceMap": true,
    /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,
    /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    "experimentalDecorators": true,
    /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,
    /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true,
    /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */


  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules/**/*"
  ]
}